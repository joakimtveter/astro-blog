---
interface Props {
	title: string;
	body: string;
	src: string;
	type: string;
	href: string;  
	github: string;
}

const { href, title, body, src, github, type } = Astro.props;
---

<li class="project-card surface-variant">
	<div class="card-image">
		<img class="image" src={src} alt={`Screenshot of ${title}`} />
		<div class={`tag ${type}`}>{type}</div>
	</div>
	<div class="content">
			<h2 class="title">{title}</h2>
		<p>{body}</p>
		<div class="links">
			<a href={github}>View <span class="visually-hidden">{title}</span> on Github</a>
			<a href={href}>View <span class="visually-hidden">{title}</span> site</a>
		</div>
	</div>
</li>
<style>
	.project-card {
		list-style-type: none;
		border-radius: 1rem;
		overflow: hidden;
	}

	.content {
		padding: 1rem 1rem 2rem;
	}

	.title {
		font-size: var(--fs-3);
		margin-block: 0;
	}

	.card-image {
		position: relative;
	}

	.image {
		object-fit: cover;
		object-position: top center;
		aspect-ratio: 16 / 9;
	}
	.links {
		display: flex;
		justify-content: space-between;
	}
	a {
		font-size: var(--fs-n1);
		text-transform: uppercase;
	}
	.tag {
		position: absolute;
		right: 0;
		bottom: 0;
		padding: 0.05rem 0.75rem;
		border-radius: 1rem 0 0 1rem;
		background-color: var(--color-primary);
		color: var(--color-on-primary);
		font-size: var(--fs-n2);
		text-transform: uppercase;
	}
	.tag .school {
		background-color: var(--color-primary);
		color: var(--color-on-primary);
	}

	.tag .work {
		background-color: var(--color-secondary);
		color: var(--color-on-secondary);
	}

	.tag .hobby {
		background-color: var(--color-tertiary);
		color: var(--color-on-tertiary);
	}


</style>
